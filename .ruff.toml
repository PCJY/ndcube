target-version = "py310"
line-length = 120
exclude = [
  ".git,",
  "__pycache__",
  "build",
  "ndcube/version.py",
]

[lint]
select = [
  "E",
  "F",
  "W",
  "UP",
  "PT",
  "BLE",
  "A",
  "C4",
  "INP",
  "PIE",
  "T20",
  "RET",
  "TID",
  "PTH",
  "PD",
  "PLC",
  "PLE",
  "FLY",
  "NPY",
  "PERF",
  "RUF",
]
extend-ignore = [
  # pycodestyle
  "E501", # ignore line length will use a formatter instead
  "E712", # Avoid equality comparisons to True; use if {cond}: for truth checks
  "E721", # type comparison Use is and is not for type comparisons, or isinstance() for isinstance checks
   # flake8-pie
  "PIE808", # explicit is better than implicit
  # upgrades
  "UP038", # Use | in isinstance - not compatible with models and is slower
  # numpy
  "NPY002", # TODO: migrate from np.random.rand to np.random.Generator
  # upgrades
  "UP038", # Use | in isinstance - not compatible with models and is slower
  # pytest
  "PT001",  # Always use pytest.fixture()
  "PT004",  # Fixtures which don't return anything should have leading _
  "PT011",  # except(ValueRaises) is too broad
  "PT012",  # except statement is too lengthy
  "PT023",  # Always use () on pytest decorators
  "PT023",  # Always use () on pytest decorators
  # flake8-use-pathlib
  "PIE808", # Disallow passing 0 as the first argument to range
  # flake8-use-pathlib
  "PTH123", # open() should be replaced by Path.open()
  # Ruff
  "RUF003", # Ignore ambiguous quote marks, doesn't allow ' in comments
  "RUF012",  # Mutable class attributes should be annotated with `typing.ClassVar`
  "RUF013",  # PEP 484 prohibits implicit `Optional`
  "RUF015",  # Prefer `next(iter(...))` over single element slice
]

[lint.per-file-ignores]
# Part of configuration, not a package.
"setup.py" = ["INP001"]
"conftest.py" = ["INP001"]
"docs/conf.py" = [
  "INP001",  # Implicit namespace package
  "E402"  # Module imports not at top of file
]
"examples/*.py" = [
  "T201",  # We need print in our examples
  "INP001",  # Implicit namespace package
]
"__init__.py" = [
  "E402", # Module level import not at top of cell
  "F401", # Unused import
  "F403", # from {name} import * used; unable to detect undefined names
  "F405", # {name} may be undefined, or defined from star imports
]
"test_*.py" = [
  "E402", # Module level import not at top of cell
]

[lint.pydocstyle]
convention = "numpy"
